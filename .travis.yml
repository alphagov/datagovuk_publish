sudo: false
language: ruby
cache: bundler
branches:
  only:
  - main
  - /^v\d+\.\d+\.\d+$/
services:
  - postgresql
  - elasticsearch
  - redis-server
before_install:
  - curl https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.9.1-amd64.deb -o elasticsearch.deb
  - sudo dpkg -i --force-confnew elasticsearch.deb
  - sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
  - sudo service elasticsearch restart
  - gem install bundler
before_script:
  - sleep 10
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
script:
  - bundle exec rails db:create
  - bundle exec rails db:schema:load
  - bundle exec rake
after_script:
  - if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT; fi
env:
  global:
  - NOKOGIRI_USE_SYSTEM_LIBRARIES=true
  - RAILS_ENV=test
  # FIXME: update on travis env
  - CC_TEST_REPORTER_ID=$CODECLIMATE_REPO_TOKEN
after_success:
  - wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
  - echo "deb http://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
  - sudo apt-get update
  - sudo apt-get install cf-cli
deploy:
  # To Staging
  - provider: script
    script: scripts/deploy.sh publish-beta-staging-worker staging worker
    on:
      repo: alphagov/datagovuk_publish
  # To Production
  - provider: script
    script: scripts/deploy.sh publish-beta-production-worker production worker
    on:
      repo: alphagov/datagovuk_publish
      tags: true
